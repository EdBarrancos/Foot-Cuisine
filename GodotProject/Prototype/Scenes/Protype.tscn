[gd_scene load_steps=24 format=2]

[ext_resource path="res://Prototype/SoundAssets/Music/Game2.wav" type="AudioStream" id=1]
[ext_resource path="res://Prototype/Scripts/Protype.gd" type="Script" id=2]
[ext_resource path="res://Prototype/Scripts/ScoreTracker.gd" type="Script" id=3]
[ext_resource path="res://Prototype/SoundAssets/ScoreSoundDefault.wav" type="AudioStream" id=4]
[ext_resource path="res://Prototype/Scripts/Timer.gd" type="Script" id=5]
[ext_resource path="res://Font/Mario-Kart-DS.ttf" type="DynamicFontData" id=6]
[ext_resource path="res://Prototype/SoundAssets/Music/Assets_Sounds_MenuN.wav" type="AudioStream" id=7]
[ext_resource path="res://Prototype/SoundAssets/Music/Assets_Sounds_Game1N.wav" type="AudioStream" id=8]
[ext_resource path="res://Prototype/SoundAssets/Music/Assets_Sounds_Game0N.wav" type="AudioStream" id=9]
[ext_resource path="res://Prototype/Animation/ScenesScore.tres" type="Animation" id=10]
[ext_resource path="res://icon.png" type="Texture" id=11]
[ext_resource path="res://Prototype/Scripts/MusicManger.gd" type="Script" id=12]

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.211221, 1 )
colors = PoolColorArray( 0.486275, 0.247059, 0.345098, 1, 0.498143, 0.263638, 0.356242, 1, 1, 0.964706, 0.827451, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="Environment" id=1]
background_mode = 4
glow_enabled = true
glow_levels/1 = true
glow_levels/2 = true
glow_levels/4 = true
glow_levels/5 = false
glow_intensity = 0.1
glow_strength = 0.8
glow_blend_mode = 1
glow_hdr_scale = 1.0
glow_bicubic_upscale = true
adjustment_enabled = true
adjustment_color_correction = SubResource( 3 )

[sub_resource type="DynamicFont" id=4]
size = 15
outline_size = 1
outline_color = Color( 0.486275, 0.247059, 0.345098, 1 )
font_data = ExtResource( 6 )

[sub_resource type="DynamicFont" id=5]
size = 22
outline_size = 2
outline_color = Color( 0.486275, 0.247059, 0.345098, 1 )
font_data = ExtResource( 6 )

[sub_resource type="DynamicFont" id=6]
size = 14
outline_size = 1
outline_color = Color( 0.486275, 0.247059, 0.345098, 1 )
font_data = ExtResource( 6 )

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform vec4 flash_color: hint_color = vec4(1.0);
uniform float flash_modifier: hint_range(0.0, 1.0);

void fragment(){
	vec4 color = texture(TEXTURE, UV);
	vec4 screen_color = texture(SCREEN_TEXTURE, SCREEN_UV);
	color.rgba = mix(screen_color.rgba,flash_color.rgba,flash_modifier);
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/flash_color = Color( 0.921569, 0.419608, 0.435294, 1 )
shader_param/flash_modifier = 0.0

[sub_resource type="Animation" id=7]
resource_name = "Combo"
length = 0.1
step = 0.025
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Combo:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.025, 0.075 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 60.7, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Combo:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.025, 0.075, 0.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1.583 ), Vector2( 1.704, 0.787 ), Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Flash:material:shader_param/flash_modifier")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=9]
resource_name = "ComboReset"
length = 0.1
step = 0.025
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Combo:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.075, 0.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.802, 0.387 ), Vector2( 0.903, 1.481 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Combo:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Flash:material:shader_param/flash_modifier")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.025, 0.075, 0.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.3, 0.7, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CanvasLayer/Flash:material:shader_param/flash_color")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.921569, 0.419608, 0.435294, 1 ), Color( 0.921569, 0.419608, 0.435294, 1 ) ]
}

[sub_resource type="Animation" id=8]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Combo:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Combo:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Score:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 200, 3 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CanvasLayer/Score:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.564, 1.435 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer/Flash:material:shader_param/flash_modifier")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("CanvasLayer/Flash:material:shader_param/flash_color")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.921569, 0.419608, 0.435294, 1 ) ]
}

[node name="Protoype" type="Node2D"]
script = ExtResource( 2 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Score" type="Node2D" parent="CanvasLayer"]
position = Vector2( 200, 3 )
scale = Vector2( 0.564, 1.435 )

[node name="Score" type="RichTextLabel" parent="CanvasLayer/Score"]
margin_left = -28.3688
margin_top = -7.66551
margin_right = 94.6312
margin_bottom = 6.33449
custom_fonts/normal_font = SubResource( 4 )
text = "score 0"
scroll_active = false

[node name="Timer" type="RichTextLabel" parent="CanvasLayer"]
margin_left = 16.0
margin_right = 88.0
margin_bottom = 16.0
custom_fonts/normal_font = SubResource( 5 )
text = "0.00"
scroll_active = false

[node name="Combo" type="Node2D" parent="CanvasLayer"]
position = Vector2( 192, 30 )

[node name="Combo" type="RichTextLabel" parent="CanvasLayer/Combo"]
modulate = Color( 1, 0.964706, 0.827451, 1 )
margin_top = -14.0
margin_right = 32.0
margin_bottom = 2.0
custom_fonts/normal_font = SubResource( 6 )
text = "C"
fit_content_height = true
scroll_active = false

[node name="Flash" type="Sprite" parent="CanvasLayer"]
material = SubResource( 11 )
position = Vector2( 160, 160 )
scale = Vector2( 5, 5 )
texture = ExtResource( 11 )
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="ScoreTracker" type="Node2D" parent="."]
script = ExtResource( 3 )
__meta__ = {
"_edit_lock_": true
}

[node name="ScoreDefault" type="AudioStreamPlayer" parent="ScoreTracker"]
stream = ExtResource( 4 )
bus = "Sound Effects"

[node name="ComboReset" type="Timer" parent="ScoreTracker"]
wait_time = 4.0

[node name="Timer" type="Node2D" parent="."]
script = ExtResource( 5 )
DEFAULTTIME = 35

[node name="Timer" type="Timer" parent="Timer"]

[node name="MusicManger" type="Node2D" parent="."]
script = ExtResource( 12 )

[node name="MainMenu" type="AudioStreamPlayer" parent="MusicManger"]
stream = ExtResource( 7 )
bus = "Music"

[node name="Game0" type="AudioStreamPlayer" parent="MusicManger"]
stream = ExtResource( 9 )
bus = "Music"

[node name="Game1" type="AudioStreamPlayer" parent="MusicManger"]
stream = ExtResource( 8 )
bus = "Music"

[node name="Game2" type="AudioStreamPlayer" parent="MusicManger"]
stream = ExtResource( 1 )
bus = "Music"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Combo = SubResource( 7 )
anims/ComboReset = SubResource( 9 )
anims/RESET = SubResource( 8 )
anims/Score = ExtResource( 10 )

[node name="AnimPlayerScore" type="AnimationPlayer" parent="."]
autoplay = "ScenesScore"
anims/ScenesScore = ExtResource( 10 )

[connection signal="score" from="ScoreTracker" to="." method="_on_ScoreTracker_score"]
[connection signal="score" from="ScoreTracker" to="Timer" method="_on_ScoreTracker_score"]
[connection signal="timeout" from="ScoreTracker/ComboReset" to="ScoreTracker" method="_on_ComboReset_timeout"]
[connection signal="end_timer" from="Timer" to="." method="_on_Timer_end_timer"]
[connection signal="timeout" from="Timer/Timer" to="Timer" method="_on_Timer_timeout"]
